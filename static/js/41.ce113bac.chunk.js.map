{"version":3,"file":"static/js/41.ce113bac.chunk.js","mappings":"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","sources":["webpack://react-kbzda-1/./src/components/Profile/MyPosts/MyPost.module.css?8a86","webpack://react-kbzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm.jsx","components/Profile/MyPosts/MyPost.jsx","components/Profile/MyPosts/MyPostContainer.jsx","webpack://react-kbzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"posts_block\":\"MyPost_posts_block__pd08z\",\"posts\":\"MyPost_posts__hFu9R\",\"post__error\":\"MyPost_post__error__mIlwQ\",\"btn\":\"MyPost_btn__9xWv0\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\"};","import classes from \"./Post.module.css\";\nimport React from \"react\";\n\nfunction Post(props) {\n  return (\n    <div className={classes.item}>\n      <img\n        src=\"https://i.ytimg.com/vi/6C9PDnU6QI0/maxresdefault.jpg\"\n        alt=\"avatar\"\n      />\n      {props.message}\n      <div>\n        <span>Like {props.likeCount} </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n","import styles from \"./MyPost.module.css\";\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { textareaFormSchema } from \"../../FormValidation/LoginFormSchema\";\n\nconst AddPostForm = (props) => {\n  let addNewPost = (value) => {\n    props.sendMessage(value);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        newMessageBody: \"\",\n      }}\n      onSubmit={(values, { resetForm }) => {\n        addNewPost(values.newMessageBody);\n        resetForm({ values: \"\" });\n      }}\n      validationSchema={textareaFormSchema}\n    >\n      {({ errors, touched }) => (\n        <Form>\n          <div>\n            <Field\n              name={\"newMessageBody\"}\n              as={\"textarea\"}\n              placeholder={\"enter text\"}\n            />\n            {errors.newMessageBody && touched.newMessageBody ? (\n              <div className={styles.post__error}>{errors.newMessageBody}</div>\n            ) : null}\n          </div>\n\n          <button className={styles.btn} type={\"submit\"}>\n            Send2\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddPostForm","import styles from \"./MyPost.module.css\";\nimport React from \"react\";\nimport Post from \"./Post/Post\";\nimport AddPostForm from \"./AddPostForm\";\n\nconst MyPost = React.memo((props) => {\n  const postElemet = props.postData.map((el) => (\n    <Post\n      message={el.message}\n      id={el.id}\n      likeCount={el.likeCount}\n      key={el.id}\n    />\n  ));\n\n  return (\n    <div className={styles.posts_block}>\n      <h3>My posts</h3>\n      <AddPostForm sendMessage={props.addPost} />\n      <div className={styles.posts}>{postElemet}</div>\n    </div>\n  );\n});\n\nexport default MyPost;\n","import { connect } from \"react-redux\";\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\nimport MyPost from \"./MyPost\";\n\nlet mapStateToProps = (state) => {\n  return {\n    postData: state.profilePage.postData,\n    newPostText: state.profilePage.newPostText,\n  };\n};\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newMessageBody) => {\n      dispatch(addPostActionCreator(newMessageBody));\n    },\n  };\n};\n\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost);\n\nexport default MyPostContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"description_block\":\"ProfileInfo_description_block__4fNv1\"};","import React, { useEffect, useState } from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div>\n      {!editMode && (\n        <div>\n          <span onClick={activateEditMode}>{props.status || \"------\"}</span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            onChange={onStatusChange}\n            autoFocus={true}\n            onBlur={deactivateEditMode}\n            value={status}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport classes from \"./ProfileInfo.module.css\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = (props) => {\n  if (!props.profile) {\n    return <Preloader />;\n  }\n\n  return (\n    <div>\n      <div>\n        <img\n          src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR4YWwJaZ79oIELX6C7q_QtBT3Doab4yGxcvQ&usqp=CAU\"\n          alt=\"hz\"\n        />\n      </div>\n      <div className={classes.description_block}>\n        <div>\n          <h2>{props.profile.fullName}</h2>\n          <img src={props.profile.photos.small} alt=\"avatar\" />\n          <ProfileStatusWithHooks\n            status={props.status}\n            updateStatus={props.updateStatus}\n          />\n          <p>{props.profile.aboutMe}</p>\n        </div>\n        <div>\n          <span>{props.profile.lookingForAJob ? \"=)\" : \"=(\"}</span>\n          <span>{props.profile.lookingForAJobDescription}</span>\n        </div>\n        <div>\n          <h3>My contacts:</h3>\n          <ul>\n            <li>\n              <a href={props.profile.facebook}>facebook</a>\n            </li>\n            <li>\n              <a href={props.profile.website}>website</a>\n            </li>\n            <li>\n              <a href={props.profile.vk}>vk</a>\n            </li>\n            <li>\n              <a href={props.profile.twitter}>twitter</a>\n            </li>\n            <li>\n              <a href={props.profile.instagram}>instagram</a>\n            </li>\n            <li>\n              <a href={props.profile.youtube}>youtube</a>\n            </li>\n            <li>\n              <a href={props.profile.github}>github</a>\n            </li>\n            <li>\n              <a href={props.profile.mainLink}>mainLink</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport MyPostContainer from \"./MyPosts/MyPostContainer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nfunction Profile(props) {\n  return (\n    <div>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n      />\n\n      <MyPostContainer />\n    </div>\n  );\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport {\n  getUserProfile,\n  getStatus,\n  updateStatus,\n} from \"../../redux/profile-reducer\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends Component {\n  componentDidMount() {\n    let userId = this.props.router.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n      />\n    );\n  }\n}\n\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  isAuth: state.auth.isAuth,\n  authorizedUserId: state.auth.userId,\n});\n\nfunction withRouter(Component) {\n  function ComponentWithRouterProp(props) {\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return <Component {...props} router={{ location, navigate, params }} />;\n  }\n\n  return ComponentWithRouterProp;\n}\n\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\n\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer);\n","import React, { Component } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n\n\nlet mapStateToPropsForRedirect = (state) => ({\n  // profile: state.profilePage.profile,\n  isAuth: state.auth.isAuth,\n});\n\nconst withAuthRedirect = (Components) => {\n  class RedirectComponent extends Component {\n    render() {\n      if (!this.props.isAuth) return <Navigate to={\"/login\"} />;\n      return <Components {...this.props} />;\n    }\n  }\n  \n  let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n  return ConnectAuthRedirectComponent;\n};\n\nexport default withAuthRedirect;\n"],"names":["props","className","classes","src","alt","message","likeCount","initialValues","newMessageBody","onSubmit","values","value","resetForm","sendMessage","validationSchema","textareaFormSchema","errors","touched","name","as","placeholder","styles","type","React","postElemet","postData","map","el","id","addPost","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","MyPost","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","profile","fullName","photos","small","aboutMe","lookingForAJob","lookingForAJobDescription","href","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Preloader","ProfileContainer","userId","this","router","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","isAuth","auth","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","mapStateToPropsForRedirect","Components","RedirectComponent","to"],"sourceRoot":""}