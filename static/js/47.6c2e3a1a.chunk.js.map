{"version":3,"file":"static/js/47.6c2e3a1a.chunk.js","mappings":"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","sources":["webpack://react-kbzda-1/./src/components/Profile/MyPosts/MyPost.module.css?8a86","webpack://react-kbzda-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddPostForm.jsx","components/Profile/MyPosts/MyPost.jsx","components/Profile/MyPosts/MyPostContainer.jsx","webpack://react-kbzda-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileData/Contact.jsx","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","webpack://react-kbzda-1/./src/components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.module.css?9ff0","components/FormValidation/ProfileFormSchema.js","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"posts_block\":\"MyPost_posts_block__pd08z\",\"posts\":\"MyPost_posts__hFu9R\",\"post__error\":\"MyPost_post__error__mIlwQ\",\"btn\":\"MyPost_btn__9xWv0\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\"};","import classes from \"./Post.module.css\";\nimport React from \"react\";\n\nfunction Post(props) {\n  return (\n    <div className={classes.item}>\n      <img\n        src=\"https://i.ytimg.com/vi/6C9PDnU6QI0/maxresdefault.jpg\"\n        alt=\"avatar\"\n      />\n      {props.message}\n      <div>\n        <span>Like {props.likeCount} </span>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n","import styles from \"./MyPost.module.css\";\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { textareaFormSchema } from \"../../FormValidation/LoginFormSchema\";\n\nconst AddPostForm = (props) => {\n  let addNewPost = (value) => {\n    props.sendMessage(value);\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        newMessageBody: \"\",\n      }}\n      onSubmit={(values, { resetForm }) => {\n        addNewPost(values.newMessageBody);\n        resetForm({ values: \"\" });\n      }}\n      validationSchema={textareaFormSchema}\n    >\n      {({ errors, touched }) => (\n        <Form>\n          <div>\n            <Field\n              name={\"newMessageBody\"}\n              as={\"textarea\"}\n              placeholder={\"enter text\"}\n            />\n            {errors.newMessageBody && touched.newMessageBody ? (\n              <div className={styles.post__error}>{errors.newMessageBody}</div>\n            ) : null}\n          </div>\n\n          <button className={styles.btn} type={\"submit\"}>\n            Send2\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AddPostForm","import styles from \"./MyPost.module.css\";\nimport React from \"react\";\nimport Post from \"./Post/Post\";\nimport AddPostForm from \"./AddPostForm\";\n\nconst MyPost = React.memo((props) => {\n  const postElemet = props.postData.map((el) => (\n    <Post\n      message={el.message}\n      id={el.id}\n      likeCount={el.likeCount}\n      key={el.id}\n    />\n  ));\n\n  return (\n    <div className={styles.posts_block}>\n      <h3>My posts</h3>\n      <AddPostForm sendMessage={props.addPost} />\n      <div className={styles.posts}>{postElemet}</div>\n    </div>\n  );\n});\n\nexport default MyPost;\n","import { connect } from \"react-redux\";\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\nimport MyPost from \"./MyPost\";\n\nlet mapStateToProps = (state) => {\n  return {\n    postData: state.profilePage.postData,\n    newPostText: state.profilePage.newPostText,\n  };\n};\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newMessageBody) => {\n      dispatch(addPostActionCreator(newMessageBody));\n    },\n  };\n};\n\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost);\n\nexport default MyPostContainer;\n","// extracted by mini-css-extract-plugin\nexport default {\"description_block\":\"ProfileInfo_description_block__4fNv1\",\"mainPhoto\":\"ProfileInfo_mainPhoto__QU8TO\",\"contact\":\"ProfileInfo_contact__sQB8W\",\"profileInfo\":\"ProfileInfo_profileInfo__QG8TK\",\"profileJob\":\"ProfileInfo_profileJob__nLU0G\"};","import React, { useEffect, useState } from \"react\";\n\nconst ProfileStatusWithHooks = (props) => {\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div>\n      {!editMode && (\n        <div>\n          <b>Status: </b>\n          <span onClick={activateEditMode}>{props.status || \"------\"}</span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            onChange={onStatusChange}\n            autoFocus={true}\n            onBlur={deactivateEditMode}\n            value={status}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React from 'react'\nimport styles from \"../ProfileInfo.module.css\";\n\nconst Contact = ({ contactTitle, contactValue }) => {\n  return (\n    <div className={styles.contact}>\n      <i>{contactTitle}: </i>\n      {contactValue}\n    </div>\n  );\n};\n\nexport default Contact","import React from 'react'\nimport styles from \"../ProfileInfo.module.css\";\nimport Contact from './Contact';\n\n\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\n  return (\n    <div>\n      {isOwner && (\n        <div>\n          <button onClick={goToEditMode}>Edit</button>\n        </div>\n      )}\n      <div className={styles.profileInfo}>\n        <div className={styles.profileJob}>\n          <b>Full name: </b>\n          {profile.fullName}\n        </div>\n        <div className={styles.profileJob}>\n          <b>Looking for a job: </b> {profile.lookingForAJob ? \"yes\" : \"no\"}\n        </div>\n        {profile.lookingForAJob && (\n          <div className={styles.profileJob}>\n            <b>My professional skills: </b>\n            {profile.lookingForAJobDescription}\n          </div>\n        )}\n        <div>\n          <b>About me:</b>\n          {profile.aboutMe}\n        </div>\n      </div>\n      <div className={styles.profileInfo}>\n        <b>My contacts: </b>\n        {Object.keys(profile.contacts).map((key) => {\n          return (\n            <Contact\n              key={key}\n              contactTitle={key}\n              contactValue={profile.contacts[key]}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileData","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ProfileDataForm_form__bHJUz\"};","import * as Yup from \"yup\";\n\nconst profileFormSchema = Yup.object({\n  fullName: Yup.string().required(\"Name is required\"),\n  lookingForAJobDescription: Yup.string()\n    .required(\"Field is required\")\n    .max(100, \"Exceeded maximum number of characters\"),\n  aboutMe: Yup.string()\n    .required(\"Field is required\")\n    .max(100, \"Exceeded maximum number of characters\"),\n});\n\nexport default profileFormSchema;\n","import React from \"react\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport style from \"./ProfileDataForm.module.css\";\nimport profileFormSchema from \"../../../FormValidation/ProfileFormSchema\";\n\nconst ProfileDataForm = (props) => {\n  const submit = props.onSubmit;\n\n  return (\n    <Formik\n      initialValues={props.profile}\n      onSubmit={submit}\n      validationSchema={profileFormSchema}\n    >\n      {() => (\n        <Form className={style.form}>\n          <div>\n            <button type=\"submit\">Save</button>\n          </div>\n          <div>\n            <label>\n              <b>Full name:</b>\n              <Field\n                as={\"input\"}\n                type=\"text\"\n                name=\"fullName\"\n                placeholder=\"Name\"\n              />\n              <ErrorMessage name=\"fullName\" component=\"div\" />\n            </label>\n            <label>\n              <b>Looking for a job:</b>\n              <Field type=\"checkbox\" name=\"lookingForAJob\" />\n            </label>\n            <label>\n              <b>My professional skills:</b>\n              <Field\n                as={\"textarea\"}\n                name=\"lookingForAJobDescription\"\n                placeholder=\"My professional skills\"\n              />\n              <ErrorMessage name=\"lookingForAJobDescription\" component=\"div\" />\n            </label>\n            <label>\n              <b>About me:</b>\n              <Field as={\"textarea\"} name=\"aboutMe\" placeholder=\"About me\" />\n              <ErrorMessage name=\"aboutMe\" component=\"div\" />\n            </label>\n            <div>\n              <b>Contacts:</b>\n              <ul>\n                {Object.keys(props.profile.contacts).map((key) => {\n                  return (\n                    <li key={key}>\n                      <label>\n                        <b>{key}:</b>\n                        <Field\n                          as={\"input\"}\n                          type=\"text\"\n                          name={\"contacts.\" + key}\n                          placeholder={key}\n                        />\n                      </label>\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default ProfileDataForm;\n","import React, { useState } from \"react\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport styles from \"./ProfileInfo.module.css\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../assets/images/images.png\";\nimport ProfileData from \"./ProfileData/ProfileData\";\nimport ProfileDataForm from \"./ProfileDataForm/ProfileDataForm\";\n\nconst ProfileInfo = (props) => {\n  let [editMode, setEditMode] = useState(false);\n\n  if (!props.profile) {\n    return <Preloader />;\n  }\n\n  const onMainPhotoSelected = (e) => {\n    if (e.target.files.length) {\n      props.savePhoto(e.target.files[0]);\n    }\n  };\n\n  const onSubmit = (formData) => {\n    props\n      .saveProfile(formData)\n      .then(() => {\n        setEditMode(false);\n      })\n      .catch(() => {\n        alert(\"Invalid url format\");\n      });\n  };\n\n  return (\n    <div>\n      <div>\n        <img\n          src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR4YWwJaZ79oIELX6C7q_QtBT3Doab4yGxcvQ&usqp=CAU\"\n          alt=\"hz\"\n        />\n      </div>\n      <div className={styles.description_block}>\n        <div className={styles.profileInfo}>\n          <img\n            src={props.profile.photos.small || userPhoto}\n            alt=\"avatar\"\n            className={styles.mainPhoto}\n          />\n          {props.isOwner && (\n            <input type=\"file\" onChange={onMainPhotoSelected}></input>\n          )}\n          <ProfileStatusWithHooks\n            status={props.status}\n            updateStatus={props.updateStatus}\n          />\n        </div>\n        {editMode ? (\n          <ProfileDataForm profile={props.profile} onSubmit={onSubmit} />\n        ) : (\n          <ProfileData\n            profile={props.profile}\n            isOwner={props.isOwner}\n            goToEditMode={() => {\n              setEditMode(true);\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\nimport MyPostContainer from \"./MyPosts/MyPostContainer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nfunction Profile(props) {\n  return (\n    <div>\n      <ProfileInfo\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n        isOwner={props.isOwner}\n        savePhoto={props.savePhoto}\n        saveProfile={props.saveProfile}\n      />\n\n      <MyPostContainer />\n    </div>\n  );\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport {\n  getUserProfile,\n  getStatus,\n  updateStatus,\n  savePhoto,\n  saveProfile,\n} from \"../../redux/profile-reducer\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport withAuthRedirect from \"../../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\nclass ProfileContainer extends Component {\n  refreshProfile() {\n    let userId = this.props.router.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (this.props.router.params.userId !== prevProps.router.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        isOwner={!this.props.router.params.userId}\n        profile={this.props.profile}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n        savePhoto={this.props.savePhoto}\n      />\n    );\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  isAuth: state.auth.isAuth,\n  authorizedUserId: state.auth.userId,\n});\n\nfunction withRouter(Component) {\n  function ComponentWithRouterProp(props) {\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return <Component {...props} router={{ location, navigate, params }} />;\n  }\n\n  return ComponentWithRouterProp;\n}\n\nexport default compose(\n  connect(mapStateToProps, {\n    getUserProfile,\n    getStatus,\n    updateStatus,\n    savePhoto,\n    saveProfile,\n  }),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer);\n","import React, { Component } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n\n\nlet mapStateToPropsForRedirect = (state) => ({\n  // profile: state.profilePage.profile,\n  isAuth: state.auth.isAuth,\n});\n\nconst withAuthRedirect = (Components) => {\n  class RedirectComponent extends Component {\n    render() {\n      if (!this.props.isAuth) return <Navigate to={\"/login\"} />;\n      return <Components {...this.props} />;\n    }\n  }\n  \n  let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n  return ConnectAuthRedirectComponent;\n};\n\nexport default withAuthRedirect;\n"],"names":["props","className","classes","src","alt","message","likeCount","initialValues","newMessageBody","onSubmit","values","value","resetForm","sendMessage","validationSchema","textareaFormSchema","errors","touched","name","as","placeholder","styles","type","React","postElemet","postData","map","el","id","addPost","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","MyPost","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","contactTitle","contactValue","profile","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","key","Yup","required","max","submit","profileFormSchema","style","component","Preloader","photos","small","userPhoto","target","files","length","savePhoto","formData","saveProfile","then","catch","alert","ProfileContainer","userId","this","router","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","isAuth","auth","location","useLocation","navigate","useNavigate","useParams","withAuthRedirect","mapStateToPropsForRedirect","Components","RedirectComponent","to"],"sourceRoot":""}